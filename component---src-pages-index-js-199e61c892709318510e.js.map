{"version":3,"sources":["webpack:///./src/components/bookCover.js","webpack:///./src/pages/index.js","webpack:///./src/static/icon-chevron-right.inline.svg"],"names":["bookCover","title","category","readtime","url","image","excerpt","to","className","cover","item","footer","categories","map","tag","i","key","link","data","isHome","coverStyle","wrapper","allMarkdownRemark","edges","index","node","id","data-tale-number","frontmatter","timeToRead","fields","slug","featured","childImageSharp","fluid","query","React","IconChevronRightInline","props","createElement","defaultProps","module","exports","default"],"mappings":"iOAqCeA,EA/BG,SAAC,GAAsD,IAArDC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,SAA0BC,GAAS,EAAzBC,MAAyB,EAAlBC,QAAkB,EAATF,KAC3D,OACI,kBAAC,OAAD,CAAMG,GAAIH,EAAKI,UAAWC,IAAMC,MAC5B,gCACI,wBAAIF,UAAWC,IAAMR,OAAQA,GAC7B,wBAAIO,UAAWC,IAAMN,UAAcA,EAAnC,mBAGJ,4BAAQK,UAAWC,IAAME,QACrB,wBAAIH,UAAWC,IAAMG,YAChBV,EAASW,KAAI,SAACC,EAAIC,GACf,OAAQ,wBAAIC,IAAKD,GAAID,OAG7B,yBAAKN,UAAS,kBAAoBC,IAAMQ,MACpC,kBAAC,IAAD,UCrBpB,sCAQe,sBAAa,IAAXC,EAAU,EAAVA,KACf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjB,MAAM,oBACX,kBAAC,IAAD,CAAQkB,QAAQ,IACd,wBAAIX,UAAWY,IAAWC,SACvBH,EAAKI,kBAAkBC,MAAMV,KAAK,WAAWW,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACjC,wBAAIT,IAAKS,EAAKC,GAAIC,mBAAkBH,EAAQ,GAC1C,kBAAC,EAAD,CACEvB,MAAOwB,EAAKG,YAAY3B,MACxBE,SAAUsB,EAAKI,WACfvB,QAASmB,EAAKnB,QACdF,IAAKqB,EAAKK,OAAOC,KACjB7B,SAAUuB,EAAKG,YAAYhB,WAC3BP,MAAOoB,EAAKG,YAAYI,SAASC,gBAAgBC,eAdlD,IAuBFC,EAAK,c,qBC/BlB,IAAIC,EAAQ,EAAQ,QAEpB,SAASC,EAAwBC,GAC7B,OAAOF,EAAMG,cAAc,MAAMD,EAAMF,EAAMG,cAAc,OAAO,CAAC,EAAI,8EAG3EF,EAAuBG,aAAe,CAAC,QAAU,YAAY,cAAc,QAE3EC,EAAOC,QAAUL,EAEjBA,EAAuBM,QAAUN","file":"component---src-pages-index-js-199e61c892709318510e.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport cover from '../styles/modules/bookCover.module.css'\nimport { Link } from 'gatsby'\nimport ChevronRight from '../static/icon-chevron-right.inline.svg'\n\nconst bookCover = ({title, category, readtime, image, excerpt, url}) => {\n    return (\n        <Link to={url} className={cover.item}>\n            <header>\n                <h2 className={cover.title}>{title}</h2>\n                <h4 className={cover.readtime}>{`${readtime}min de leitura`}</h4>\n            </header>\n\n            <footer className={cover.footer}>\n                <ul className={cover.categories}>\n                    {category.map((tag,i) => {\n                        return (<li key={i}>{tag}</li>)\n                    }) }\n                </ul>\n                <div className={`btn btn-circle ${cover.link}`}>\n                    <ChevronRight/>\n                </div>\n            </footer>\n        </Link>\n    )\n}\n\nbookCover.propTypes = {\n    title: PropTypes.string.isRequired,\n    category: PropTypes.array,\n    readtime: PropTypes.number,\n    image: PropTypes.object,\n    excerpt: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n}\n\nexport default bookCover","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\"\nimport coverStyle from \"../styles/modules/bookCover.module.css\"\nimport Cover from '../components/bookCover'\n\nexport default ({data}) => {\n  return(\n    <Layout>\n      <SEO title=\"Todo o conteÃºdo\"/>\n      <Header isHome={true}/>\n        <ul className={coverStyle.wrapper}>\n          {data.allMarkdownRemark.edges.map( ({ node }, index) => (\n            <li key={node.id} data-tale-number={index + 1}>\n              <Cover\n                title={node.frontmatter.title}\n                readtime={node.timeToRead}\n                excerpt={node.excerpt}\n                url={node.fields.slug}\n                category={node.frontmatter.categories}\n                image={node.frontmatter.featured.childImageSharp.fluid}\n              />\n            </li>\n          ))}\n        </ul>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark (sort: {fields: frontmatter___date, order: DESC}){\n      edges {\n        node {\n          id\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            categories\n            date(formatString: \"DD MMMM, YYYY\")\n            featured {\n              childImageSharp {\n                fluid(maxHeight: 800, jpegProgressive: true) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`","var React = require('react');\n\nfunction IconChevronRightInline (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M18.629 15.997l-7.083-7.081L13.462 7l8.997 8.997L13.457 25l-1.916-1.916z\"}));\n}\n\nIconChevronRightInline.defaultProps = {\"viewBox\":\"0 0 32 32\",\"aria-hidden\":\"true\"};\n\nmodule.exports = IconChevronRightInline;\n\nIconChevronRightInline.default = IconChevronRightInline;\n"],"sourceRoot":""}